Imports System.Configuration
Imports System.Data.SqlClient
Imports DataAccessHandler
Imports Telerik.WinControls.UI
Public Class frmEditLBags
    Dim USERADD, USEREDIT, USERVIEW, USERDELETE As Boolean      'USED FOR RIGHT MANAGEMAENT

    Private mFr_State As FormState

    Dim strSQL As String = Nothing

    Dim dbManager As New SqlHelper(ConfigurationManager.ConnectionStrings("ConString").ToString())

    Dim Objcn As SqlConnection = New SqlConnection(ConfigurationManager.ConnectionStrings("ConString").ToString())
    Private Sub frmEditLBags_Load(sender As Object, e As EventArgs) Handles Me.Load
        Me.fillBagType()
    End Sub
    Private Sub cmbEBagtype_SelectedIndexChanged(sender As Object, e As Data.PositionChangedEventArgs) Handles cmbEBagtype.SelectedIndexChanged
        If Convert.ToInt32(cmbEBagtype.SelectedIndex) > 0 Then
            Me.fillLotFailBagNo()
        End If
    End Sub
    Private Sub btnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
        If IsExists() = False Then
            MessageBox.Show(String.Format("Cannot Delete Record.", Me.cmbRBagNo.Text))
            Me.cmbRBagNo.Focus()
            Exit Sub
        Else
            Me.DeleteLotFailBagNo()
        End If
    End Sub
    Private Sub fillBagType()

        Dim connection As SqlConnection = Nothing

        Dim parameters = New List(Of SqlParameter)()
        parameters.Clear()

        With parameters
            .Add(dbManager.CreateParameter("@ActionType", "FillLotFailBag", DbType.String))
        End With

        Dim dr = dbManager.GetDataReader("SP_BagMaster_Select", CommandType.StoredProcedure, parameters.ToArray(), connection)
        Dim dt As DataTable = New DataTable()

        dt.Load(dr)

        Try
            cmbEBagtype.DataSource = Nothing
            cmbEBagtype.Items.Clear()

            'Insert the Default Item to DataTable.
            Dim row As DataRow = dt.NewRow()
            row(0) = 0
            row(1) = "---Select---"
            dt.Rows.InsertAt(row, 0)

            'Assign DataTable as DataSource.
            cmbEBagtype.DataSource = dt
            cmbEBagtype.DisplayMember = "ItemName"
            cmbEBagtype.ValueMember = "ItemId"
            cmbEBagtype.AutoCompleteMode = AutoCompleteMode.Suggest
        Catch ex As Exception
            MessageBox.Show("Error:- " & ex.Message)
        Finally
            dr.Close()
            dbManager.CloseConnection(connection)
        End Try
    End Sub
    Private Sub cmbRBagNo_SelectedIndexChanged(sender As Object, e As Data.PositionChangedEventArgs) Handles cmbRBagNo.SelectedIndexChanged
        If Convert.ToInt32(cmbRBagNo.SelectedIndex) > -1 Then
            Me.BindLotFailBag()
        End If
    End Sub
    Private Sub BindLotFailBag()
        Dim dtdata As DataTable = New DataTable()

        Dim parameters = New List(Of SqlParameter)()
        parameters.Clear()

        With parameters
            .Add(dbManager.CreateParameter("@ActionType", "SearchByBagNo", DbType.String))
            .Add(dbManager.CreateParameter("@BagNumber", CStr(cmbRBagNo.SelectedItem.Text), DbType.String))
        End With

        dtdata = dbManager.GetDataTable("SP_LotFail_Select", CommandType.StoredProcedure, parameters.ToArray())

        Try
            dgvLotFailBag.DataSource = dtdata
            dgvLotFailBag.EnableFiltering = True
            dgvLotFailBag.MasterTemplate.ShowFilteringRow = False
            dgvLotFailBag.MasterTemplate.ShowHeaderCellButtons = True
        Catch ex As Exception
            MessageBox.Show("Error:- " & ex.Message)
        Finally
        End Try
    End Sub
    Private Sub btnCancel_Click(sender As Object, e As EventArgs) Handles btnCancel.Click
        Try
            Call Clear_Form()
        Catch ex As Exception
            MessageBox.Show(ex.Message, "Testing", MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try
    End Sub
    Private Sub fillLotFailBagNo()

        Dim connection As SqlConnection = Nothing
        Dim dt As DataTable = New DataTable()

        Dim parameters = New List(Of SqlParameter)()
        parameters.Clear()

        With parameters
            .Add(dbManager.CreateParameter("@ActionType", "FetchRLotFailBag", DbType.String))
        End With

        Dim dr = dbManager.GetDataReader("SP_LotFail_Select", CommandType.StoredProcedure, parameters.ToArray(), connection)

        dt.Load(dr)

        If dt.Rows.Count = 0 Then
            MessageBox.Show("No LotFail Bags Avilable !!!", "Record", MessageBoxButtons.OK, MessageBoxIcon.Information)
            Exit Sub
        End If

        Try
            cmbRBagNo.DataSource = Nothing
            cmbRBagNo.Items.Clear()

            'Insert the Default Item to DataTable.
            Dim row As DataRow = dt.NewRow()
            row(0) = 0
            row(1) = "---Select---"
            dt.Rows.InsertAt(row, 0)

            'Assign DataTable as DataSource.
            cmbRBagNo.DataSource = dt
            cmbRBagNo.DisplayMember = "LotFailBagNo"
            cmbRBagNo.ValueMember = "LotFailId"

        Catch ex As Exception
            MessageBox.Show("Error:- " & ex.Message)
        Finally
            dr.Close()
            dbManager.CloseConnection(connection)
        End Try
    End Sub
    Private Function IsExists() As Boolean
        Dim iCnt As Int16 = 0

        Try

            Using cmd As New SqlCommand("SP_CheckBagNo_Select", Objcn)
                cmd.CommandType = CommandType.StoredProcedure
                cmd.Parameters.AddWithValue("@ActionType", "GetBhukaBagNo")
                cmd.Parameters.AddWithValue("@BagNo", CStr(cmbRBagNo.Text.Trim()))
                cmd.Parameters.Add("@Exists", SqlDbType.Int)
                cmd.Parameters("@Exists").Direction = ParameterDirection.Output
                Objcn.Open()
                cmd.ExecuteNonQuery()
                Objcn.Close()

                iCnt = cmd.Parameters("@Exists").Value

            End Using

            If iCnt = 1 Then
                Return False
            End If

            Return True
        Catch ex As Exception
            Return False
            MessageBox.Show(ex.Message, "Chain", MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try

    End Function
    Private Sub DeleteLotFailBagNo()

        If dgvLotFailBag.Rows.Count > 0 Then

            Try

                Dim Dparameters = New List(Of SqlParameter)()
                Dparameters.Clear()

                For i As Integer = 0 To dgvLotFailBag.RowCount - 1
                    If dgvLotFailBag.Rows(i).Cells(0).Value = True And dgvLotFailBag.Rows(i).Cells(8).Value IsNot Nothing Then
                        With Dparameters
                            .Add(dbManager.CreateParameter("@ActionType", "DeleteLotFailData", DbType.String))
                            .Add(dbManager.CreateParameter("@BagNo", CStr(cmbRBagNo.Text.Trim()), DbType.String))
                            .Add(dbManager.CreateParameter("@TId", Val(dgvLotFailBag.Rows(i).Cells(8).Value), DbType.Int16))
                        End With

                        dbManager.Update("SP_EditBags_Delete", CommandType.StoredProcedure, Dparameters.ToArray())
                    End If
                    Dparameters.Clear()
                Next

                MessageBox.Show("LotFail Bag Deleted !!!", "Chain", MessageBoxButtons.OK, MessageBoxIcon.Information)

            Catch ex As Exception
                MessageBox.Show("Error:- " & ex.Message)
            End Try

        End If
    End Sub
    Private Sub Clear_Form()
        Try

            '' For Header Field Start

            cmbEBagtype.SelectedIndex = 0
            cmbRBagNo.SelectedIndex = -1
            '' For Header Field End

            '' For Detail Field Start

            dgvLotFailBag.DataSource = Nothing

            '' For Detail Field End

        Catch ex As Exception
            MessageBox.Show(ex.Message, "Chain", MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try

    End Sub
End Class